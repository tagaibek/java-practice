0) Sort of List <int[]> : you have List <int[]> you'll sort list and Array. input first int in size of list,
   second int arrays length

 F.E : list {4, 5, 6}; {5, 3, 6} return => [3, 5, 6] [4, 5, 6]
1)
An array with an odd number of elements is said to be centered if all elements (except the middle one)
are strictly greater than the value of the middle element.
Note that only arrays with an odd number of elements have a middle element.
Write a function that accepts an integer array and returns 1 if it is a centered array,
otherwise it returns 0.

Examples:
if the input array is	return
{1, 2, 3, 4, 5}	0 (the middle element 3 is not strictly less than all other elements)
{3, 2, 1, 4, 5}	1 (the middle element 1 is strictly less than all other elements)
{3, 2, 1, 4, 1}	0 (the middle element 1 is not strictly less than all other elements)
{1, 2, 3, 4}	0 (no middle element)
{}	0 (no middle element)
{10}	1 (the middle element 10 is strictly less than all other elements)


2)
Consider an array A with n of positive integers.
An integer idx is called a POE (point of equilibrium) of A,
if A[0] + A[1] + … + A[idx – 1] is equal to A[idx + 1] + A[idx + 2] + … + A[n – 1].
Write a function to return POE of an array, if it exists and -1 otherwise.

The signature of the function is: int f(int[] a)

Examples
if input arrays are	return
{1, 8, 3, 7, 10, 2}	3 Reason: a[0] + a[1] + a[2] is equal to a[4] + a[5]
{1, 5, 3, 1, 1, 1, 1, 1, 1}	2 Reason: a[0] + a[1] is equal to a[3] + a[4] + a[5] + a[6] + a[7] + a[8]
{2, 1, 1, 1, 2, 1, 7}	5 Reason: a[0] + a[1] + a[2] + a[3] + a[4] is equal to a[6]
{1, 2, 3}	-1 Reason: No POE.
{3, 4, 5, 10}	-1 Reason: No POE.
{1, 2, 10, 3, 4}	-1 Reason: No POE.
